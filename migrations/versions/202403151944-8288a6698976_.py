"""empty message

Revision ID: 8288a6698976
Revises: 
Create Date: 2024-03-15 19:44:31.263080

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = '8288a6698976'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('img_src', sa.Text(), nullable=True),
    sa.Column('avg_price', sa.Float(), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE products SET SCHEMA {SCHEMA};")
        
    op.create_table('settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('similarity_threshold', sa.Integer(), nullable=False),
    sa.Column('filter_limit', sa.Integer(), nullable=False),
    sa.Column('select_all', sa.Boolean(), nullable=False),
    sa.Column('select_highest', sa.Boolean(), nullable=False),
    sa.Column('dark_mode', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE settings SET SCHEMA {SCHEMA};")
    op.create_table('websites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('search_bar_locator', sa.Text(), nullable=True),
    sa.Column('header_locator', sa.Text(), nullable=True),
    sa.Column('price_locator', sa.Text(), nullable=True),
    sa.Column('pop_up_locator', sa.Text(), nullable=True),
    sa.Column('pop_up_check', sa.Boolean(), nullable=False),
    sa.Column('search_button_locator', sa.Text(), nullable=True),
    sa.Column('search_button_check', sa.Boolean(), nullable=False),
    sa.Column('image_locator', sa.Text(), nullable=True),
    sa.Column('url_locator', sa.Text(), nullable=True),
    sa.Column('filter_check', sa.Boolean(), nullable=False),
    sa.Column('excluded', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE websites SET SCHEMA {SCHEMA};")
        
    op.create_table('matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('img_src', sa.Text(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('website_name', sa.Text(), nullable=False),
    sa.Column('similarity_rating', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('website_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['website_id'], ['websites.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE matches SET SCHEMA {SCHEMA};")
        
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('matches')
    op.drop_table('websites')
    op.drop_table('settings')
    op.drop_table('products')
    # ### end Alembic commands ###
